apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-gateway
  namespace: {{ .Values.namespace }}
spec:
  replicas: 2
  selector: { matchLabels: { app: api-gateway } }
  template:
    metadata: { labels: { app: api-gateway } }
    spec:
      containers:
      - name: nginx
        image: nginx:1.25-alpine
        ports: [{ containerPort: 80 }]
        volumeMounts:
        - { name: gateway-conf, mountPath: /etc/nginx/nginx.conf, subPath: nginx.conf }
        - { name: frontend,     mountPath: /usr/share/nginx/html/index.html, subPath: index.html }
        readinessProbe: { httpGet: { path: /, port: 80 }, initialDelaySeconds: 5, periodSeconds: 5 }
        livenessProbe:  { httpGet: { path: /, port: 80 }, initialDelaySeconds: 10, periodSeconds: 10 }
      volumes:
      - name: gateway-conf
        configMap: { name: gateway-conf }
      - name: frontend
        configMap: { name: frontend }

---
apiVersion: v1
kind: Service
metadata:
  name: api-gateway
  namespace: {{ .Values.namespace }}
spec:
  selector: { app: api-gateway }
  type: {{ .Values.gateway.serviceType | default .Values.serviceType }}
  ports:
    - name: http
      port: 80
      targetPort: 80
